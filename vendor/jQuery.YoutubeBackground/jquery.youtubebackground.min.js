"function" != typeof Object.create && (Object.create = function (t) { function e() { } return e.prototype = t, new e }), function (t, e) { var i; YTPlayer = { defaults: { ratio: 16 / 9, videoId: "ZCAnLxRvNNc", mute: !0, repeat: !0, width: t(e).width(), wrapperZIndex: 99, playButtonClass: "YTPlayer-play", pauseButtonClass: "YTPlayer-pause", muteButtonClass: "YTPlayer-mute", volumeUpClass: "YTPlayer-volume-up", volumeDownClass: "YTPlayer-volume-down", increaseVolumeBy: 10, start: 0, fitToBackground: !0 }, init: function (i, o) { this.userOptions = o, $body = t("body"), $node = t(i); var n = this; return this.options = t.extend({}, this.defaults, this.userOptions), this.options.fitToBackground ? this.createBackgroundVideo() : this.createContainerVideo(), t(e).on("resize", function () { n.resize(n) }), n.resize(n), e.onYouTubeIframeAPIReady = function () { n.onYouTubeIframeAPIReady(n) }, this }, createContainerVideo: function () { $node.append('<div id="YTPlayer-container" style="overflow: hidden; position: absolute; z-index: 0; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; height: 100%"><div id="YTPlayer-player" style="position: absolute"></div></div><div id="YTPlayer-shield" style="width: 100%; height: 100%; z-index: 2; position: absolute; left: 0; top: 0;"></div>') }, createBackgroundVideo: function () { t("html,body").css({ width: "100%", height: "100%" }), $body.prepend('<div id="YTPlayer-container" style="overflow: hidden; position: fixed; z-index: 0; top: 0; left: 0; right: 0; bottom: 0; min-width: 100%; height: 100%"><div id="YTPlayer-player" style="position: absolute"></div></div><div id="YTPlayer-shield" style="width: 100%; height: 100%; z-index: 2; position: absolute; left: 0; top: 0;"></div>'), $node.css({ position: "relative", "z-index": this.options.wrapperZIndex }) }, resize: function (i) { var o = t(e); i.options.fitToBackground || (o = $node); var n, a, r = o.width(), s = o.height(), d = t("#YTPlayer-player"); i.options.width = r, r / i.options.ratio < s ? (n = Math.ceil(s * i.options.ratio), d.width(n).height(s).css({ left: (r - n) / 2, top: 0 })) : (a = Math.ceil(r / i.options.ratio), d.width(r).height(a).css({ left: 0, top: 0 })) }, onYouTubeIframeAPIReady: function (t) { i = new e.YT.Player("YTPlayer-player", { width: t.options.width, height: Math.ceil(t.options.width / t.options.ratio), videoId: t.options.videoId, playerVars: { controls: 0, showinfo: 0, wmode: "transparent", modestbranding: 1, branding: 0, rel: 0, autohide: 0 }, events: { onReady: function (e) { t.onPlayerReady(e) }, onStateChange: function (e) { t.onPlayerStateChange(e) } } }) }, onPlayerReady: function (t) { this.options.mute && t.target.mute(), t.target.playVideo() }, onPlayerStateChange: function (t) { 0 === t.data && this.options.repeat && i.seekTo(this.options.start) }, getPlayer: function () { return i } }, t.fn.YTPlayer = function (e) { return this.each(function () { t(this).data("yt-init", !0); var i = Object.create(YTPlayer); i.init(this, e), t.data(this, "ytPlayer", i) }) } }(jQuery, window);